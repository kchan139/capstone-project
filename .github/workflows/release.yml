name: Release

on:
  push:
    tags:
      - "v*.*.*"

env:
  GO_VERSION: "1.24"

jobs:
  build-and-release:
    name: Build and Create Release
    runs-on: ubuntu-24.04
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract version from tag
        id: version
        run: |
          VERSION="${GITHUB_REF#refs/tags/v}"
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "Release version: ${VERSION}"

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
          cache-dependency-path: container-runtime/go.sum

      - name: Install dependencies
        working-directory: container-runtime
        run: |
          go mod download
          go mod verify

      - name: Build mrunc binary with version info
        working-directory: container-runtime
        run: |
          make build VERSION=v${{ steps.version.outputs.version }}

          # Rename binary to include version
          mv bin/mrunc bin/mrunc-v${{ steps.version.outputs.version }}-linux-amd64

          # Create checksum
          cd bin
          sha256sum mrunc-v${{ steps.version.outputs.version }}-linux-amd64 > mrunc-v${{ steps.version.outputs.version }}-linux-amd64.sha256

          echo "Build artifacts:"
          ls -lh

      - name: Get previous release tag
        id: previous_tag
        run: |
          TAGS=($(git tag --sort=-creatordate | grep '^v[0-9]'))
          if [ ${#TAGS[@]} -gt 1 ]; then
            echo "previous_tag=${TAGS[1]}" >> $GITHUB_OUTPUT
            echo "Previous release: ${TAGS[1]}"
          else
            echo "previous_tag=" >> $GITHUB_OUTPUT
            echo "No previous tag found"
          fi

      - name: Generate release notes
        id: release_notes
        run: |
          cat > release_notes.md << 'HEADER'
          ## MRUNC v${{ steps.version.outputs.version }}

          ### Installation

          ```bash
          # Download binary and checksum
          curl -LO https://github.com/${{ github.repository }}/releases/download/v${{ steps.version.outputs.version }}/mrunc-v${{ steps.version.outputs.version }}-linux-amd64
          curl -LO https://github.com/${{ github.repository }}/releases/download/v${{ steps.version.outputs.version }}/mrunc-v${{ steps.version.outputs.version }}-linux-amd64.sha256

          # Verify checksum
          sha256sum -c mrunc-v${{ steps.version.outputs.version }}-linux-amd64.sha256

          # Install
          sudo install -m 0755 mrunc-v${{ steps.version.outputs.version }}-linux-amd64 /usr/local/bin/mrunc

          # Verify installation
          mrunc --version

          # Cleanup
          rm -f mrunc-v${{ steps.version.outputs.version }}-linux-amd64*
          ```

          ### What's Changed

          HEADER

          # Generate changelog
          if [ -n "${{ steps.previous_tag.outputs.previous_tag }}" ]; then
            echo "#### Changes since ${{ steps.previous_tag.outputs.previous_tag }}:" >> release_notes.md
            echo "" >> release_notes.md
            git log ${{ steps.previous_tag.outputs.previous_tag }}..HEAD --pretty=format:"- %s (%h)" --no-merges >> release_notes.md
            echo "" >> release_notes.md
            echo "" >> release_notes.md
            echo "**Full Changelog**: https://github.com/${{ github.repository }}/compare/${{ steps.previous_tag.outputs.previous_tag }}...v${{ steps.version.outputs.version }}" >> release_notes.md
          else
            echo "#### Initial Release" >> release_notes.md
            echo "" >> release_notes.md
            git log --pretty=format:"- %s (%h)" --no-merges >> release_notes.md
          fi

          cat >> release_notes.md << 'FOOTER'

          ### System Requirements

          - Linux kernel 4.x or higher
          - x86_64 architecture
          - Root privileges (for namespace operations)

          ### Usage

          ```bash
          # Initialize rootfs (run once as root)
          sudo mrunc init

          # Run a container
          sudo mrunc run

          # Check version
          mrunc --version
          mrunc -v
          ```
          FOOTER

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: v${{ steps.version.outputs.version }}
          body_path: release_notes.md
          draft: false
          prerelease: ${{ startsWith(steps.version.outputs.version, '0.') }}
          files: |
            container-runtime/bin/mrunc-v${{ steps.version.outputs.version }}-linux-amd64
            container-runtime/bin/mrunc-v${{ steps.version.outputs.version }}-linux-amd64.sha256
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
